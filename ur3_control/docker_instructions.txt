# Run Docker for UR3e

ros2 run ur_client_library start_ursim.sh -m ur3e

http://192.168.56.101:6080/vnc.html - The sim will be located at this ur_client_library

# Docker IP is 192.168.56.101

# Ping the Robot IP
ping 192.168.56.101

# Acquire your computers IP Address
ifconfig
192.168.56.101

# Update the Host IP and Host Name to your IP - Located at: URCaps > External Control (Top Left Corner)

# Turn on the Play Button (Bottom Right Corner)

# Launch the Driver using the Robot IP

ros2 launch ur_robot_driver ur_control.launch.py ur_type:=ur3e robot_ip:=192.168.56.101 launch_rviz:=true kinematics_config:="/home/jarred/git/DalESelfEBot/ur3_control/calibration/docker_ur3e_calibration.yaml"

ros2 launch ur_robot_driver ur_control.launch.py \
  ur_type:=ur3e \
  robot_ip:=192.168.56.101 \
  launch_rviz:=true \
  kinematics_params_file:=/home/jarred/git/DalESelfEBot/ur3_control/calibration/docker_ur3e_calibration.yaml

###### ===== Now you are connected ===== #####

# Build Package

cd ~/ros2_ws
colcon build --packages-select ur3_control --symlink-install
source install/setup.bash

# Launch MoveIt

ros2 launch ur_moveit_config ur_moveit.launch.py ur_type:=ur3e launch_rviz:=false

# Launch Control Node

ros2 run ur3_control spline_follower

# === or === #

ros2 launch ur3_control moveit_stack.launch.py ur_type:=ur3e launch_rviz:=false // Use if we need the kinematics solver set to KDL 

# Publish Continuation message

ros2 topic pub /continue_execution std_msgs/msg/Empty "{}" -1

# Check Controller List

ros2 control list_controllers

# Publish fake toolpath message to test out convar setup

ros2 topic pub /toolpath std_msgs/msg/Empty -1

# Publish shutdown message

ros2 topic pub /shutdown std_msgs/msg/Empty -1
